---
import dates from "../dates.json";
---

<!doctype html>
<html lang="en">
  <head>
    <title>home</title>
  </head>

  <body>
    <div class="home-wrapper" id="main-home">
      <!-- top -->
      <div class="home-lanzamientos">
        <div class="lanzamientos">
          <a href="#lanzamientos" title="lanzamientos"><span>#</span>Ir a lanzamientos</a>
        </div>
       
      </div>

      <!-- mid -->

      <div class="home-destacados">
        <div class="side-left">
          <h4>
            d<br/>e<br/>v<br/>i<br/>l<br />
            <br />d<br/>o<br/>e<br/>s<br/>n<br/>t<br />
            <br />s<br/>l<br/>e<br/>e<br/>p
          </h4>
        </div>

        <div class="side-right">
          <div class="card-wrapper">
            <div class="destacado">
              <h2><span>#</span>Memorias</h2>
            </div>

            <div class="card-carousell">
              {
                dates.map((fechas) => (
                  <div class="card">
                    <div class="title">
                      <h3>{fechas.fecha}</h3>
                    </div>
                    <div class="memories">
                      <p>{fechas.memoria}</p>
                    </div>
                  </div>
                ))
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>

<style>
  * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
  }

  html {
    scroll-behavior: smooth;
            
    ::-webkit-scrollbar {
      width: 0.5rem;
    }

    ::-webkit-scrollbar-track {
      background-color: #030303;
    }

    ::-webkit-scrollbar-thumb {
      background: linear-gradient(#060506, #000000);
      border: 2px solid #020202;
      border-radius: 2rem;
    }
  }





  .home-wrapper {
    height: 100vh;
    width: 100%;
    background: #080708;
    background-image: url("../svg/clock.svg");
    background-size: cover;
    background-blend-mode: color-dodge;
    background-repeat: no-repeat;
    background-position: bottom;
  }

  .home-wrapper .home-lanzamientos {
    display: flex;
    justify-content: center;
    padding: 2rem 0;
    width: 100%;
  }

  .home-wrapper .home-lanzamientos .lanzamientos {
    display: flex;
    justify-content: center;
    align-items: end;
    flex-basis: 50%;
    padding-left: .3rem;
  }
  .home-wrapper .home-lanzamientos .lanzamientos a {
    color: #fff;
    text-decoration: none;
    font-size: 1.3rem;
  }

  .home-wrapper .home-lanzamientos .lanzamientos a:hover {
    color: #d7094e;
  }

  .home-wrapper .home-lanzamientos .lanzamientos a span {
    color: #d7094e;
  }

  /*mid */

  .home-wrapper .home-destacados {
    display: flex;
    height: 80%;
    align-items: center;
  }

  .home-wrapper .home-destacados .side-left {
    padding: 1rem;
    display: flex;
    flex-basis: 0;
    height: 100%;
    align-items: center;
  }

  .home-wrapper .home-destacados .side-left h4 {
    text-transform: uppercase;
    font-weight: lighter;
    color: #fff;
  }

  .home-wrapper .home-destacados .side-right {
    width: 100%;
    display: flex;
    background: linear-gradient(rgba(1,1,1,.4),rgba(1,1,1,.4));
    border-radius: .8rem;
    overflow: hidden;
    -webkit-box-shadow: 0px 4px 19px 0px rgba(0,0,0,0.75);
    -moz-box-shadow: 0px 4px 19px 0px rgba(0,0,0,0.75);
    box-shadow: 0px 4px 19px 0px rgba(0,0,0,0.75);
  }

  /*cards carousell*/
  .home-wrapper .home-destacados .side-right .card-wrapper {
    width: 100%;
  }

  .home-wrapper .home-destacados .side-right .card-wrapper .destacado {
    padding-left: 1%;
    
  }

  .home-wrapper .home-destacados .side-right .card-wrapper .destacado h2 {
    color: #fff;
  }

  .home-wrapper .home-destacados .side-right .card-wrapper .destacado h2 span {
    color: #d7094e;
  }

  .home-wrapper .home-destacados .side-right .card-wrapper .card-carousell {
    width: 100%;
    white-space: nowrap;
    display: flex;
    align-items: center;
    overflow: hidden;
    cursor: pointer;
    padding: 0.5rem;
    margin-top: 0.5rem;
  }

  .home-wrapper
    .home-destacados
    .side-right
    .card-wrapper
    .card-carousell
    .card {
    height: 340px;
    min-width: 340px;
    margin-right: 14px;
    background: #080708;
    padding: 2rem;
    border-radius: 3rem;
    border: 2px solid #d7094e;
  }

  .home-wrapper
    .home-destacados
    .side-right
    .card-wrapper
    .card-carousell
    .card
    .title {
    padding: 0.8rem;
  }

  .home-wrapper
    .home-destacados
    .side-right
    .card-wrapper
    .card-carousell
    .card
    .title
    h3 {
    text-align: center;
    color: #fff;
  }

  .home-wrapper
    .home-destacados
    .side-right
    .card-wrapper
    .card-carousell
    .card
    .memories {
    padding: 1rem;
    width: 100%;
    height: 70%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
  }

  .home-wrapper
    .home-destacados
    .side-right
    .card-wrapper
    .card-carousell
    .card
    .memories
    p {
    text-wrap: wrap;
    font-style: italic;
    color: #fff;
  }

  /* media queries */
</style>

<script>
  const carousel = document.querySelector(".card-carousell"),
    firstImg = carousel.querySelectorAll(".card")[0];

  let isDragStart = false;
  let isDragging = false;
  let prevPageX;
  let prevScrollLeft;
  let positionDiff;

  const autoSlide = () => {
    // if there is no image left to scroll then return from here
    if (
      carousel.scrollLeft - (carousel.scrollWidth - carousel.clientWidth) >
        -1 ||
      carousel.scrollLeft <= 0
    )
      return;
    positionDiff = Math.abs(positionDiff); // making positionDiff value to positive
    let firstImgWidth = firstImg.clientWidth + 14;
    // getting difference value that needs to add or reduce from carousel left to take middle img center
    let valDifference = firstImgWidth - positionDiff;
    if (carousel.scrollLeft > prevScrollLeft) {
      // if user is scrolling to the right
      return (carousel.scrollLeft +=
        positionDiff > firstImgWidth / 3 ? valDifference : -positionDiff);
    }
    // if user is scrolling to the left
    carousel.scrollLeft -=
      positionDiff > firstImgWidth / 3 ? valDifference : -positionDiff;
  };
  const dragStart = (e) => {
    // updatating global variables value on mouse down event
    isDragStart = true;
    prevPageX = e.pageX || e.touches[0].pageX;
    prevScrollLeft = carousel.scrollLeft;
  };
  const dragging = (e) => {
    // scrolling images/carousel to left according to mouse pointer
    if (!isDragStart) return;
    e.preventDefault();
    isDragging = true;
    carousel.classList.add("dragging");
    positionDiff = (e.pageX || e.touches[0].pageX) - prevPageX;
    carousel.scrollLeft = prevScrollLeft - positionDiff;
  };
  const dragStop = () => {
    isDragStart = false;
    carousel.classList.remove("dragging");
    if (!isDragging) return;
    isDragging = false;
    autoSlide();
  };
  carousel.addEventListener("mousedown", dragStart);
  carousel.addEventListener("touchstart", dragStart);
  document.addEventListener("mousemove", dragging);
  carousel.addEventListener("touchmove", dragging);
  document.addEventListener("mouseup", dragStop);
  carousel.addEventListener("touchend", dragStop);
</script>
